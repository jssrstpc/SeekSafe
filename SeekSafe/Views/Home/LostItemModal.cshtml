@model SeekSafe.Item

@{
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
    ViewBag.Title = "Success Lost Item Report";
}


<div class="container">
    <div class="form-horizontal">

        <!-- The Modal -->
        <div class="modal fade" id="myModal">
            <div class="modal-dialog">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Success! Your Report Has Been Submitted.</h4>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>

                    <!-- Modal body -->
                    <div class="modal-body">
                        You will be directed to the Found Item section to check if there is a match for your lost item.
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <a href="~/Home/FoundItems" class="btn btn-primary">Ok</a>
                    </div>

                </div>
            </div>
        </div>


        <h4 align="center">Report Lost Item</h4>
        <hr />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                Description
                <div>
                    @Html.TextAreaFor(model => model.itemDescription, new { @class = "form-control", placeholder = "Ex. I lost my black iPhone 12 with a cracked screen at the local park near the swing set. The phone has a black case with a sticker on the back.", @required = "required", rows = "4", cols = "50" })
                    @Html.ValidationMessageFor(model => model.itemDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                Item Name
                <div>
                    @Html.EditorFor(model => model.itemName, new { htmlAttributes = new { @class = "form-control", placeholder = "Ex. Cellphone", @required = true } })
                    @Html.ValidationMessageFor(model => model.itemName, "", new { @class = "text-danger" })
                </div>
            </div>


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                Location
                <div>
                    @Html.EditorFor(model => model.locationName, new { htmlAttributes = new { @class = "form-control", placeholder = "Ex. School Canteen", @required = true } })
                    @Html.ValidationMessageFor(model => model.locationName, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                Input Date Lost
                <div>
                    @Html.EditorFor(model => model.dateFound, new { htmlAttributes = new { @class = "form-control", placeholder = "MM/DD/YYYY", @required = true } })
                    @Html.ValidationMessageFor(model => model.dateFound, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label for="itemType" class="col-md-2 control-label">Item Type:</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.itemType, new SelectList(new[]
                {
                    new SelectListItem { Text = "Electronic devices (e.g., smartphones, laptops, tablets)", Value = "1" },
                    new SelectListItem { Text = "Clothing (e.g., jackets, hats, shoes)", Value = "2" },
                    new SelectListItem { Text = "Jewelry (e.g., necklaces, rings, bracelets)", Value = "3" },
                    new SelectListItem { Text = "Books (e.g., textbooks, novels, magazines)", Value = "4" },
                    new SelectListItem { Text = "Accessories (e.g., wallets, bags, keys)", Value = "5" },
                    new SelectListItem { Text = "Documents (e.g., ID cards, passports, tickets)", Value = "6" },
                    new SelectListItem { Text = "Sporting goods (e.g., bicycles, skateboards, sports equipment)", Value = "7" },
                    new SelectListItem { Text = "Miscellaneous items (e.g., umbrellas, glasses, toys)", Value = "8" }


                }, "Value", "Text"), "Select", new { @class = "form-control", @required = true })
                    @Html.ValidationMessageFor(model => model.itemType, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div>
                    @Html.LabelFor(model => model.ImageURL, "Upload Image:")
                    <input type="file" id="image" name="image" class="form-control" required />
                    @Html.ValidationMessageFor(model => model.ImageURL, "", new { @class = "text-danger" })
                </div>
            </div>


            <div>
                <button type="submit" value="Create" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#myModal">
                    Submit
                </button>
            </div>

            <div>
                @Html.ActionLink("Back", "LostItems", null, new { @class = "back-home" })
            </div>

    

        }

    </div>
</div>
    

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>